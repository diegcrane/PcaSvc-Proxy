<div id="rendered" class="markdown-body bg-white p-4 rounded-lg"><h1>PcaSvc Proxy</h1><p>Use Pca process as a proxy to do Read and Write calls on protected processes.</p><h2 id="installation"><a class="anchorjs-link " href="#installation" aria-label="Anchor" data-anchorjs-icon="î§‹" style="font-style: normal; font-variant: normal; font-weight: normal; font-stretch: normal; font-size: 1em; line-height: inherit; font-family: anchorjs-icons; position: absolute; margin-left: -1em; padding-right: 0.5em;"></a>How does it work?</h2><h4>1. Get PcaSvc svchost.exe process id.</h4><h4>2. Get a PROCESS_ALL_ACCESS handle to PcaSvc.</h4><h4>3. Find the address that holds the handle to the target process, this must be done remotely as Pca has Strict handle checks</h4><h4>4. Allocate a PAGE_EXECUTE_READWRITE memory region to write the shell code and the request object.</h4><h4>5. Allocate two memory pages to pass read and write buffers to the shell code.</h4><h4>6. Create a remote thread on the shell code base address. Hijacking an already existing thread would be better but Controll Flow Guard would raise an exception.</h4><h4>7. Use proxy::rvm and proxy::wvm</h4><h2>License</h2><p><a href="https://choosealicense.com/licenses/mit/">MIT</a></p></div>
